How did viewing a diff between two versions of a file help you see the bug that was introduced?
It showed the lines that were different
I do not know if it will search for similar stuff that was changed or if one single enter will have a big influence on the result

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
It can help spot mistakes and it makes it easier to see which mistakes were made early on. Furhtermore it can help you reverse more quickly when a solution did not work

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
	It makes the commits more meaningfull and gives the ability to give an explanation to the commit, instead of just having different versions without an idea about what is different.
	The Cons are that people can forget or push too big changes. Or that the explanations do not make sense

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file seperately?
	Due to the nature of the use of the file savings. For Google Docs the function is just restoring previous versions, but no interconnection is necessary

How can you use the commands git log and git diff to view the history of files?
	You can use git log to see the previous commits of a file, with text explaining them. You can then use git diff to see what changes were made inbetween two versions.
	
How might using version control make you more confident to make changes that could break something?
	Because it is easier to restore earlier versions
	
Now that you have your workspace set up, what do you want to try using Git for?
	To make more interesting programs, while having better version control
	
	